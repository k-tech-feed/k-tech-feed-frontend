import { Hydrate, QueryClient, QueryClientProvider } from '@tanstack/react-query';
import type { AppProps } from 'next/app';
import localFont from 'next/font/local';
import Head from 'next/head';
import Script from 'next/script';
import { useState } from 'react';
import { RecoilRoot } from 'recoil';

import { NextUIProvider, useSSR } from '@nextui-org/react';

import { PageLayout } from '@/components';

const fonts = localFont({
  src: [
    {
      path: '../../public/fonts/Pretendard-ExtraLight.subset.woff2',
      weight: '200',
      style: 'normal',
    },
    {
      path: '../../public/fonts/Pretendard-Regular.subset.woff2',
      weight: '400',
      style: 'normal',
    },
    {
      path: '../../public/fonts/Pretendard-SemiBold.subset.woff2',
      weight: '600',
      style: 'normal',
    },
    {
      path: '../../public/fonts/Pretendard-ExtraLight.subset.woff2',
      weight: '800',
      style: 'normal',
    },
    {
      path: '../../public/fonts/Pretendard-Black.subset.woff2',
      weight: '900',
      style: 'normal',
    },
  ],
});

export default function App({ Component, pageProps }: AppProps) {
  const { isBrowser } = useSSR();
  const [queryClient] = useState(() => new QueryClient());

  return (
    isBrowser && (
      <NextUIProvider>
        { process.env.NEXT_PUBLIC_GOOGLE_ANALYTICS &&
          <>
            <Script
                strategy="lazyOnload"
                src={`https://www.googletagmanager.com/gtag/js?id=${process.env.NEXT_PUBLIC_GOOGLE_ANALYTICS}`}
            />
            <Script async={true} id="gAnalytics" strategy="lazyOnload">
              {`
              window.dataLayer = window.dataLayer || [];
              function gtag(){dataLayer.push(arguments);}
              gtag('js', new Date());
    
              gtag('config', '${process.env.NEXT_PUBLIC_GOOGLE_ANALYTICS}');
            `}
            </Script>
          </>
        }
        <Head>
          <title>K Tech Feed</title>
          <meta name="description" content="Generated by create next app" />
          <meta name="viewport" content="width=device-width, initial-scale=1" />
          <link rel="icon" href="/favicon.ico" />
        </Head>
        <QueryClientProvider client={queryClient}>
          <RecoilRoot>
            <Hydrate state={pageProps.dehydratedState}>
              <PageLayout className={fonts.className}>
                <Component {...pageProps} />
              </PageLayout>
            </Hydrate>
          </RecoilRoot>
        </QueryClientProvider>
      </NextUIProvider>
    )
  );
}
